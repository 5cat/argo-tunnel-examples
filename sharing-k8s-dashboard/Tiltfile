"""
dashboard-auth-proxy makes the k8s dashboard accessible from the internet. It has 2 containers,
the first one injects auth header and proxies request to dashboard_proxy local service,and the 
second one exposes the first container to the internet using Argo Tunnel as a sidecar.
"""
def dashboard_auth_proxy():
    # The token is generated by defining the serviceaccount, so it contains a random prefix, 
    # ex: kubernetes-dashboard-token-xtfn9. We need to find the exact name of the token to access
    # the secret from a pod
    token_name=local("kubectl get secret -n kubernetes-dashboard | grep 'kubernetes-dashboard-token' | awk '{print $1}' | tr -d '\n'")
    local_resource(name='rebuild-dashboard-auth-proxy',
        cmd='cd dashboard-auth-proxy && GOOS=linux GOOARCH=amd64 go build -o bin/dashboard-auth-proxy main.go')
    docker_build(ref='dashboard-auth-proxy', context='./dashboard-auth-proxy', dockerfile='./dashboard-auth-proxy/Dockerfile')
    k8s_yaml(envsubst('./dashboard-auth-proxy/deployment.yaml',
                                token_name=token_name))
    k8s_resource(workload='dashboard-auth-proxy', port_forwards=['5000:5000', '8000:8000'])

def envsubst(manifest, **kwargs):
    env_str = ' '.join(['%s=%s' % (k.upper(), str(v)) for k, v in kwargs.items()])
    return local('%s envsubst < %s' %(env_str, manifest))
    
dashboard_auth_proxy()